/*
    Repeating Sub-Sequence

    Problem Description

    Given a string A, find if there is any subsequence that repeats itself.

    A subsequence of a string is defined as a sequence of characters generated by deleting some characters in the string without changing the order of the remaining characters.

    NOTE: Sub-sequence length should be greater than or equal to 2.



    Problem Constraints

    1 <= length(A) <= 100


    Input Format

    The first and the only argument of input contains a string A.


    Output Format

    Return an integer, 1 if there is any subsequence which repeat itself else return 0.


    Example Input

    Input 1:

     A = "abab"

    Input 2:

     A = "abba"



    Example Output

    Output 1:

     1

    Output 2:

     0



    Example Explanation

    Explanation 1:

     "ab" is repeated.

    Explanation 2:

     There is no repeating subsequence.
 */
package DP;

public class RepeatingSubSequence {
    public static void main(String[] args) {
        System.out.println(anytwo("abcab"));
        System.out.println(anytwo("abbac"));
    }

    public static int anytwo(String A) {
        int n = A.length()+1;
        int[][] cache = new int[n][n];
        for (int i = 1; i < n; i++) {
            for (int j = 1; j < n; j++) {
                if(A.charAt(i-1) == A.charAt(j-1) && i!=j) {
                    cache[i][j] = 1+cache[i-1][j-1];
                }else {
                    cache[i][j] = Math.max(cache[i-1][j],cache[i][j-1]);
                }
                if(cache[i][j] >=2) return 1;
            }
        }
        return 0;
    }
}
